const N = 2
range T = 0..N

//Memory process
MEMORY = MEMORY[0],
MEMORY[u:T] = (read[u] -> MEMORY[u] | write[v:T] ->MEMORY[v]).
//LOCK
LOCK = (acquire -> release -> LOCK).

//Lock with Memeory
LOCKEDMEM = (LOCK || MEMORY).

//Turnistel process
TURNSTILE = (go -> write[0] -> RUN),
RUN = (arrive -> INCREMENT),
INCREMENT = (read[v:0..N-1] -> write[v+1] -> RUN | read[N] -> TURNSTILE).

//Garden process
||GARDEN = (east:TURNSTILE || west:TURNSTILE || {east,west}::LOCKEDMEM) /{reset/{east, west}.write[0], go/{east, west}.go}.