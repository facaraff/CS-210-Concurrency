const N = 2
range T = 0..N
//Memory process
MEMORY = MEMORY[0],
MEMORY[u:T] = (read[u] -> MEMORY[u] | write[v:T] ->MEMORY[v]).
//Turnistel process
TURNSTILE = (go -> write[0] -> RUN),
RUN = (arrive -> INCREMENT),
INCREMENT = (read[v:0..N-1] -> write[v+1] -> RUN | read[N] -> TURNSTILE).
//Garden process
||GARDEN = (east:TURNSTILE || west:TURNSTILE || {east, west}::MEMORY/{reset/{east, west}.write[0],
go/{east, west}.go, east.return/east.read[N],west.return/west.read[N]}).
//Garden process (fisrt version)
//||GARDEN = (east:TURNSTILE || west:TURNSTILE || {east,west}::MEMORY)
const A = 2*N // if both processes performed all writes then at most we get A writes
range D = 0..A TEST = TEST[0],
TEST[v:D] = ({east,west}.write[u:1..N] -> TEST[v+1] |
reset -> TEST[0] | when (v>N) wrong -> ERROR).
||TESTGARDEN = (GARDEN || TEST).